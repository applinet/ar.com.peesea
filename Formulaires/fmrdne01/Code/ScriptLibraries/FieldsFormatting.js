// jQuery$(document).ready(function() {	// - - - - - - - - - -	// Champs monétique		// Appuye sur une touche	$(".Money").keypress(function(e) {		// Point ou virgule, on n'en autorise qu'un seul		if((e.which == 46) ||(e.which == 44)) {			if(($(this).val().indexOf(".") != -1) || ($(this).val().indexOf(",") != -1)) {				e.preventDefault();			}		}		// Caractère autre que [0-9]		// /!\ Firefox: touche de déplacement = 0, backspace = 8		else if((e.which != 0) && (e.which != 8) && ((e.which < 48) || (e.which > 57))) {			e.preventDefault();		}				// Remplacement des points par des virgules		$(this).val($(this).val().replace(/\./gi, ","));				// Si la valeur commence par une virgule, on ajoute un 0 devant		$(this).val($(this).val().replace(/^,/gi, "0,"));				//Uniquement deux chiffres après la virgule , length à 1 car il y a un temps de retard dans le keypress		var expReg = new RegExp(/[,\.]/);		if (expReg.test($(this).val())) {			if($(this).val().split(",")[1].length > 1) {				if((e.which >= 48) && (e.which <= 57)) {					e.preventDefault();				}			}		}	});	// Changement de la valeur (copier-coller par exemple)	$(".Money").change(function() {		// Si la valeur contient un point, on remplace par une virgule		$(this).val($(this).val().replace(/[\.]/gi, ","));			// Si la valeur commence par une virgule, on ajoute un 0 devant		$(this).val($(this).val().replace(/^[,]$/gi, ""));				// Si la valeur fini par une virgule, on ajoute un 00 derrière		$(this).val($(this).val().replace(/[,]$/gi, ",00"));	});		// - - - - - - - - - -	// Champs numériques		// Appuye sur une touche	$(".Numeric").keypress(function(e) {				// Point ou virgule, on n'en autorise qu'un seul		if((e.which == 46) ||(e.which == 44)) {			if(($(this).val().indexOf(".") != -1) || ($(this).val().indexOf(",") != -1)) {				e.preventDefault();			}		}		// Caractère autre que [0-9]		// /!\ Firefox: touche de déplacement = 0, backspace = 8		else if((e.which != 0) && (e.which != 8) && ((e.which < 48) || (e.which > 57))) {			e.preventDefault();		}	});	// Changement de la valeur (copier-coller par exemple)	$(".Numeric").change(function() {		// Uniquement points, virgules et [0-9]		$(this).val($(this).val().replace(/[^,\.0-9]/gi, ""));				// remplacement des points par des virgules		$(this).val($(this).val().replace(/\./gi, ","));		// Suppression des virgules en trop		while($(this).val().split(",").length > 2) {			$(this).val($(this).val().replace(/,/gi, ""));		}		// Si la valeur commence par une virgule, on ajoute un 0 devant		$(this).val($(this).val().replace(/^,/gi, "0,"));				});			// - - - - - - - - - -	// Champs entiers		// Appuye sur une touche	$(".Integer").keypress(function(e) {				// Caractère autre que [0-9]		// /!\ Firefox: touche de déplacement = 0, backspace = 8		if((e.which != 0) && (e.which != 8) && ((e.which < 48) || (e.which > 57))) {			e.preventDefault();		}	});	// Changement de la valeur (copier-coller par exemple)	$(".Integer").change(function() {		// Uniquement [0-9]		$(this).val($(this).val().replace(/[^0-9]/gi, ""));			});	// - - - - - - - - - -	// Champs alphanumériques		// Appuye sur une touche	$(".AlphaNumeric").keypress(function(e) {				// Caractère autre que [0-9a-zA-Z]		// /!\ Firefox: touche de déplacement = 0, backspace = 8		if((e.which != 0) && (e.which != 8) && ((e.which < 48) || (e.which > 57)) && ((e.which < 65) || (e.which > 90)) && ((e.which < 97) || (e.which > 122))) {			e.preventDefault();		}	});	// Changement de la valeur (copier-coller par exemple)	$(".AlphaNumeric").change(function() {		// Uniquement [0-9a-z]		$(this).val($(this).val().replace(/[^0-9a-zA-Z]/gi, ""));						});	// - - - - - - - - - -	// Champs date		// Appuye sur une touche	$(".Date").keypress(function(e) {				// "/", on n'en autorise que deux		if(e.which == 47) {			var SlashRegExp = new RegExp("/", "g");			if(($(this).val().indexOf("/") != -1) && ($(this).val().match(SlashRegExp).length >= 2)) {				e.preventDefault();			}		}		// Caractère autre que [0-9], "/"		// /!\ Firefox: touche de déplacement = 0, backspace = 8		else if((e.which != 0) && (e.which != 8) && (e.which != 47) && ((e.which < 48) || (e.which > 57))) {			e.preventDefault();		}	});	// Changement de la valeur (copier-coller par exemple)	$(".Date").change(function() {		// Uniquement "/" et [0-9]		$(this).val($(this).val().replace(/[^\/0-9]/gi, ""));	});			// - - - - - - - - - -	// Champs heure		// Appuye sur une touche	$(".Time").keypress(function(e) {		// ":", on n'en autorise qu'un		if(e.which ==58) {			if($(this).val().indexOf(":") != -1) {				e.preventDefault();			}		}		// Caractère autre que [0-9], ":"		// /!\ Firefox: touche de déplacement = 0, backspace = 8		else if((e.which != 0) && (e.which != 8) && ((e.which < 48) || (e.which > 57)) && (e.which != 58)) {			e.preventDefault();		}	});	// Changement de la valeur (copier-coller par exemple)	$(".Time").change(function() {		// Uniquement ":" et [0-9]		$(this).val($(this).val().replace(/[^:0-9]/gi, ""));						});	});