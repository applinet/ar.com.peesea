'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare

Use "Forms_Constants"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Public Class LogEntry

'++LotusScript Development Environment:2:5:(Declarations):0:10
Const LOGTYPE_ERROR$		= "Error"
Const LOGTYPE_WARNING$	= "Warning"
Const LOGTYPE_MESSAGE$	= "Message"

' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Cette classe représente une entrée dans la base de log applicative
' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Public Class LogEntry
	
	
	' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	'																	MEMBRES
	' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
	Public LogType As String
	
	Public DBName	As String
	Public FormCode As String
	Public AgentName As String
	Public LibName As String
	Public ClassName As String
	Public SubName As String
	Public DocID As String
	Public UserName As String
	
	Public ErrCode As Integer
	Public ErrLine As Integer
	
	Public ErrMsg As String
	
	Private ErrDebugArray() As String
	
	
	' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	'															METHODES PUBLIQUES
	' * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
	
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	'																	Constructeur
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Public Sub New()
		
		' Gestion d'erreurs
		On Error Goto ErrorHandler
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 								Variables, initialisation
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		Dim CurrentSession As New NotesSession
		Dim CurrentDB As NotesDatabase		
		Dim CurrentAgent As NotesAgent	
		Dim CurrentDoc As NotesDocument
		Dim CurrentUser As NotesName
		
		Set CurrentDB = CurrentSession.CurrentDatabase		
		Set CurrentAgent = CurrentSession.CurrentAgent
		Set CurrentDoc = CurrentSession.DocumentContext
		Set CurrentUser = New NotesName(CurrentSession.EffectiveUserName)
		
		Me.DBName = CurrentDB.Title
		Me.AgentName = CurrentAgent.Name
		
		If Not CurrentDoc Is Nothing Then
			Me.DocID = CurrentDoc.UniversalID	
		End If
		
		If Not CurrentUser Is Nothing Then
			Me.UserName = CurrentUser.Canonical
		End If
		
		Redim Me.ErrDebugArray(0) As String
		
		
		' C'est fini, on sort
		Exit Sub
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Gestion d'erreurs
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ErrorHandler:
		Messagebox("Class LogEntry - New - Erreur " + Str(Err) + " - Ligne " + Str(Erl) + " - " + Error$)		
		Exit Sub
	End Sub
	
	
	
	
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	'													Convertion objet => chaine de caratères
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Public Function ToString() As String
		
		' Gestion d'erreurs
		On Error Goto ErrorHandler
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 								Variables, initialisation
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		Dim ReturnString As String
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Traitement
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		ReturnString = Me.LogType
		ReturnString = ReturnString + "#" + Cstr(Me.ErrCode)
		ReturnString = ReturnString + "#" + Me.ErrMsg
		ReturnString = ReturnString + "#" + Cstr(Me.ErrLine)
		ReturnString = ReturnString + "#" + Me.DBName
		ReturnString = ReturnString + "#" + Me.AgentName
		ReturnString = ReturnString + "#" + Me.LibName
		ReturnString = ReturnString + "#" + Me.ClassName
		ReturnString = ReturnString + "#" + Me.SubName
		ReturnString = ReturnString + "#" + Me.FormCode
		ReturnString = ReturnString + "#" + Me.DocID
		ReturnString = ReturnString + "#" + Me.UserName
		ReturnString = ReturnString + "#" + Implode(Me.ErrDebugArray, "@")		
		
		ToString = ReturnString
		
		
		' C'est fini, on sort
		Exit Function
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Gestion d'erreurs
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ErrorHandler:
		Messagebox("Class LogEntry - ToString - Erreur " + Str(Err) + " - Ligne " + Str(Erl) + " - " + Error$)		
		Exit Function
	End Function
	
	
	
	
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	'													Convertion chaine de caratères => objet
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Public Sub FromString(pString As String)
		
		' Gestion d'erreurs
		On Error Goto ErrorHandler
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 								Variables, initialisation
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		Dim MembersValues As Variant
		Dim TempArray As Variant
		Dim i As Integer
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Traitement
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		MembersValues = Split(pString, "#")
		
		Me.LogType 			= MembersValues(0)
		Me.ErrCode 			= Cint(MembersValues(1))
		Me.ErrMsg 			= MembersValues(2)
		Me.ErrLine 			= Cint(MembersValues(3))
		Me.DBName 		= MembersValues(4)
		Me.AgentName 		= MembersValues(5)
		Me.LibName 		= MembersValues(6)
		Me.ClassName 		= MembersValues(7)
		Me.SubName 		= MembersValues(8)
		Me.FormCode		= MembersValues(9)
		Me.DocID 				= MembersValues(10)
		Me.UserName		= MembersValues(11)
		
		
		TempArray = Split(MembersValues(12), "@")		
		Redim Me.ErrDebugArray(0) As String
		
		For i = 0 To Ubound(TempArray)
			Call Me.AddDebugLine(TempArray(i))			
		Next
		
		
		' C'est fini, on sort
		Exit Sub
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Gestion d'erreurs
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ErrorHandler:
		Messagebox("Class LogEntry - FromString - Erreur " + Str(Err) + " - Ligne " + Str(Erl) + " - " + Error$)		
		Exit Sub
	End Sub
	
	
	
	
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	'					Cette procédure ce charge d'ajouter une ligne au texte de debug
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Public Sub AddDebugLine(paramLine As String)
		
		' Gestion d'erreurs
		On Error Goto ErrorHandler
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Traitement
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		' On redimensionne le tableau
		Redim Preserve Me.ErrDebugArray(Ubound(Me.ErrDebugArray) + 1) As String
		Me.ErrDebugArray(Ubound(Me.ErrDebugArray)) = paramLine
		
		' C'est fini, on sort
		Exit Sub		
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Gestion d'erreurs
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ErrorHandler:
		Messagebox("Class LogEntry - AddDebugLine - Erreur " + Str(Err) + " - Ligne " + Str(Erl) + " - " + Error$)		
		Exit Sub	
	End Sub	
	
	
	
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	'								Cette procédure ce charge d'enregistrer le document de log	
	' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	Public Sub Save(pServer As String, pDBPath As String)
		
		' Gestion d'erreurs	
		On Error Goto ErrorHandler
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 								Variables, initialisation
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		Dim LogDB As NotesDatabase
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Traitement
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
		
		' On ouvre la base de log
		Set LogDB = New NotesDatabase(pServer, pDBPath)
		
		' Si la base n'a pas pu être ouverte, on envoie un message dans le journal
		If (Not LogDB.IsOpen) Then
			Messagebox("Impossible d'ouvrir la base de log '" + pDBPath + "' sur le serveur '" + pServer + "'")			
		End If
		
		
		
		
		' On nettoye les chaines de caratères
		Me.LogType			= Trim(Me.LogType)
		Me.DBName			= Trim(Me.DBName)
		Me.FormCode		= Trim(Me.FormCode)
		Me.AgentName		= Trim(Me.AgentName)
		Me.LibName			= Trim(Me.LibName)
		Me.ClassName		= Trim(Me.ClassName)
		Me.SubName		= Trim(Me.SubName)
		Me.DocID				= Trim(Me.DocID)
		
		Me.ErrMsg			= Trim(Me.ErrMsg)
		
		
		' Si l'objet représentant la base à été créé et que la base a été ouverte sans problème
		If ((Not LogDB Is Nothing) And LogDB.IsOpen)Then
			
			' On créé un nouveau document
			Dim LogEntryDocument As New NotesDocument(LogDB)
			LogEntryDocument.Form = "LogEntry"
			
			LogEntryDocument.f_LogType		= Me.LogType
			
			LogEntryDocument.f_LogTime		= Now
			LogEntryDocument.f_DBName		= Me.DBName
			LogEntryDocument.f_FormCode		= Me.FormCode
			LogEntryDocument.f_AgentName	= Me.AgentName
			LogEntryDocument.f_LibName		= Me.LibName
			LogEntryDocument.f_ClassName	= Me.ClassName
			LogEntryDocument.f_SubName		= Me.SubName
			LogEntryDocument.f_DocID			= Me.DocID
			LogEntryDocument.f_User				= Me.UserName
			
			LogEntryDocument.f_ErrCode			= Me.ErrCode
			LogEntryDocument.f_ErrLine			= Me.ErrLine			
			LogEntryDocument.f_LogMsg			= Me.ErrMsg
			LogEntryDocument.f_ErrDebug		= Fulltrim(Me.ErrDebugArray)
			
			' On enregistre le document
			Call LogEntryDocument.Save(False, False)
			
			
		' Si la base n'a pas été ouverte
		Else
			
			' On créé une chaine de caractères à retourner
			Dim MessageString As String
			
			' C'est soit une erreur, soit une alerte
			Select Case Trim(Me.LogType)
			Case LOGTYPE_ERROR$:			MessageString = "LogEntry - Erreur"				
			Case LOGTYPE_WARNING$:		MessageString = "LogEntry - Alerte"
			Case LOGTYPE_MESSAGE$:		MessageString = "LogEntry - Message"
			Case Else:				MessageString = "LogEntry"
			End Select
			
			' Si possible on ajoute le nom de la base			
			If (Me.DBName <> "") Then
				MessageString = MessageString	 + " - Base " + Me.DBName
			End If
			
			' Si possible on ajoute le nom du formulaire
			If (Me.FormCode <> "") Then
				MessageString = MessageString + " - Formulaire " + Me.FormCode
			End If
			
			' Si possible on ajoute le nom de l'agent
			If (Me.AgentName <> "") Then
				MessageString = MessageString + " - Agent " + Me.AgentName
			End If
			
			' Si possible on ajoute le nom de la bibliothèque
			If (Me.LibName <> "") Then
				MessageString = MessageString + " - Bibliothèque " + Me.LibName
			End If
			
			' Si possible on ajoute le nom de la classe
			If (Me.ClassName <> "") Then
				MessageString = MessageString + " - Classe " + Me.ClassName
			End If
			
			' Si possible on ajoute le nom de la procédure/fonction
			If (Me.SubName <> "") Then
				MessageString = MessageString + " - Procédure " +Me.SubName
			End If
			
			' Si possible on ajoute l'ID du document
			If (Me.DocID <> "") Then
				MessageString = MessageString + " - Document " +Me.DocID
			End If
			
			' Si possible on ajoute le nom de l'utilisateur
			If (Me.UserName <> "") Then
				MessageString = MessageString + " - Utilisateur " +Me.UserName
			End If
			
			' Si possible on ajoute la ligne de l'erreur
			If (Me.ErrLine > 0) Then
				MessageString = MessageString + " - Ligne " + Str(Me.ErrLine)
			End If
			
			' Si possible on ajoute le code de l'erreur
			If (Me.ErrCode > 0) Then
				MessageString = MessageString + " - Code " + Str(Me.ErrCode)
			End If
			
			' Si possible on ajoute le texte du message
			If (Me.ErrMsg <> "") Then
				MessageString = MessageString + " - " + Me.ErrMsg
			Else
				MessageString = MessageString + " - Aucun message défini !"
			End If
			
			' On affiche le message			
			Messagebox(MessageString)
			
		End If
		
		
		' C'est fini, on sort
		Exit Sub		
		
		
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		' 											Gestion d'erreurs
		' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ErrorHandler:
		Messagebox("Class LogEntry - Save - Erreur " + Str(Err) + " - Ligne " + Str(Erl) + " - " + Error$)		
		Exit Sub	
	End Sub	
	
End Class