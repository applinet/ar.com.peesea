'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare

Use "Forms_Constants"
Use "Forms_Libs"
Use "LogEntry"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub Initialize
Declare Private Sub Hooks_HandleError(pSubName As String)
Declare Sub Hook_Attachment_Init(docContext As NotesDocument)
Declare Sub Hook_Attachment_BeforeAttachRemove(docContext As NotesDocument, pAttachment As NotesEmbeddedObject)
Declare Sub Hook_Attachment_AfterAttachRemove(docContext As NotesDocument, pAttachment As NotesEmbeddedObject)
Declare Sub Hook_Attachment_AfterAttachAdd(docContext As NotesDocument, strAttachmentName As String)
Declare Sub Hook_Attachment_BeforeAttachAdd(docContext As NotesDocument, strAttachmentName As String)

'++LotusScript Development Environment:2:5:(Declarations):0:2

'++LotusScript Development Environment:2:2:Initialize:1:10
Sub Initialize
	
End Sub

'++LotusScript Development Environment:2:2:Hooks_HandleError:5:8
' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'	Cette procédure se charge d'enregistrer les messages d'erreur. Elle ne sert qu'a allèger les codes
' 										en regroupant les lignes identiques
' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Private Sub Hooks_HandleError(pSubName As String)
	
	' On propage les erreurs si neccessaire
	If (Err = ERROR_PROPAGATE%) Then
		Error ERROR_PROPAGATE%, Error$
		
	Else
		Dim LogEntry As New LogEntry
		LogEntry.LogType			= LOGLEVEL_EMERG%
		LogEntry.LibName			= "PerfRHCore_Hooks_Attachments"
		LogEntry.SubName		= pSubName
		LogEntry.Erl					= Erl
		LogEntry.Err					= Err
		LogEntry.Msg				= Error$
		
		' On fait remonter l'erreur
		Error ERROR_PROPAGATE%, LogEntry.ToString
		
	End If
	
End Sub

'++LotusScript Development Environment:2:2:Hook_Attachment_Init:0:8

' Initialisation de l'agent
Sub Hook_Attachment_Init(docContext As NotesDocument)
	
	' Gestion d'erreurs
	On Error Goto ErrorHandler
	
	
	
	' C'est fini, on sort
	Exit Sub
	
	
' Gestion d'erreurs
ErrorHandler:
	Hooks_HandleError("Hook_Attachments_Init")
	Exit Sub
	
End Sub

'++LotusScript Development Environment:2:2:Hook_Attachment_BeforeAttachRemove:0:8
' Avant suppression d'une pièce jointe
Sub Hook_Attachment_BeforeAttachRemove(docContext As NotesDocument, pAttachment As NotesEmbeddedObject)
	
	' Gestion d'erreurs
	On Error Goto ErrorHandler
	
	
	
	' C'est fini, on sort
	Exit Sub
	
	
' Gestion d'erreurs
ErrorHandler:
	Hooks_HandleError("Hook_Attachments_BeforeAttachRemove")
	Exit Sub
End Sub


'++LotusScript Development Environment:2:2:Hook_Attachment_AfterAttachRemove:0:8
' Après suppression d'une pièce jointe
Sub Hook_Attachment_AfterAttachRemove(docContext As NotesDocument, pAttachment As NotesEmbeddedObject)
	
	' Gestion d'erreurs
	On Error Goto ErrorHandler
	
	
	' TELETRA, notification HRBP et Assistant HRBP quand la demande est validée
	If (Trim(UCase(docContext.f_TypeForm(0))) = "TELETRA") And (docContext.f_Etat(0) = 97) Then

		' Session
		Dim Session As NotesSession
		Set Session = New NotesSession
	
		' Base courante	
		Dim dbCurrent As NotesDatabase
		Set dbCurrent = Session.CurrentDatabase

		' Document de profil
		Dim docProfile As NotesDocument
		Set docProfile = dbCurrent.GetProfileDocument("m_ProfileParam")
		If docProfile Is Nothing Then Error lsERR_NOTES_NOSUCH_PROFILE, "Impossible d'ouvrir le document de profil !"

		' On récupère la vue des documents de paramétrage
		Dim viewFormsParams As NotesView
		Set viewFormsParams = dbCurrent.GetView("v_FormsParams")
	
		' On récupère le document de paramétrage pour le modèle du document traité
		Dim docFormParams As NotesDocument
		Set docFormParams = viewFormsParams.GetDocumentbyKey(docContext.f_TypeForm(0))	

		' Notification
		Dim nameHRBP As NotesName
		Set nameHRBP = New NotesName(Trim(docContext.TELETRA_HRBP(0)))
		If(Trim(docContext.TELETRA_HRBPAssist(0)) <> "") Then
			Dim nameHRBPAssist As NotesName
			Set nameHRBPAssist = New NotesName(Trim(docContext.TELETRA_HRBPAssist(0)))
			Call SendPresetMail(dbCurrent, docFormParams, docProfile, docContext, nameHRBP, nameHRBPAssist, "ADD17")
			Call AddNotifiedReaders(docContext, nameHRBPAssist)
		Else
			Call SendPresetMail(dbCurrent, docFormParams, docProfile, docContext, nameHRBP, Null, "ADD17")
		End If
		Call AddNotifiedReaders(docContext, nameHRBP)
		
	End If


	' C'est fini, on sort
	Exit Sub
	
	
' Gestion d'erreurs
ErrorHandler:
	Hooks_HandleError("Hook_Attachments_AfterAttachRemove")
	Exit Sub
End Sub


'++LotusScript Development Environment:2:2:Hook_Attachment_AfterAttachAdd:0:8
' Après ajout d'une pièce jointe
Sub Hook_Attachment_AfterAttachAdd(docContext As NotesDocument, strAttachmentName As String)
	
	' Gestion d'erreurs
	On Error GoTo ErrorHandler
	
	
	' TELETRA, notification HRBP et Assistant HRBP quand la demande est validée
	If (Trim(UCase(docContext.f_TypeForm(0))) = "TELETRA") And (docContext.f_Etat(0) = 97) Then

		' Session
		Dim Session As NotesSession
		Set Session = New NotesSession
	
		' Base courante	
		Dim dbCurrent As NotesDatabase
		Set dbCurrent = Session.CurrentDatabase

		' Document de profil
		Dim docProfile As NotesDocument
		Set docProfile = dbCurrent.GetProfileDocument("m_ProfileParam")
		If docProfile Is Nothing Then Error lsERR_NOTES_NOSUCH_PROFILE, "Impossible d'ouvrir le document de profil !"

		' On récupère la vue des documents de paramétrage
		Dim viewFormsParams As NotesView
		Set viewFormsParams = dbCurrent.GetView("v_FormsParams")
	
		' On récupère le document de paramétrage pour le modèle du document traité
		Dim docFormParams As NotesDocument
		Set docFormParams = viewFormsParams.GetDocumentbyKey(docContext.f_TypeForm(0))	

		' Notification
		Dim nameHRBP As NotesName
		Set nameHRBP = New NotesName(Trim(docContext.TELETRA_HRBP(0)))
		If(Trim(docContext.TELETRA_HRBPAssist(0)) <> "") Then
			Dim nameHRBPAssist As NotesName
			Set nameHRBPAssist = New NotesName(Trim(docContext.TELETRA_HRBPAssist(0)))
			Call SendPresetMail(dbCurrent, docFormParams, docProfile, docContext, nameHRBP, nameHRBPAssist, "ADD17")
			Call AddNotifiedReaders(docContext, nameHRBPAssist)
		Else
			Call SendPresetMail(dbCurrent, docFormParams, docProfile, docContext, nameHRBP, Null, "ADD17")
		End If
		Call AddNotifiedReaders(docContext, nameHRBP)
		
	End If
	
	
	' C'est fini, on sort
	Exit Sub
	
	
' Gestion d'erreurs
ErrorHandler:
	Hooks_HandleError("Hook_Attachment_AfterAttachAdd")
	Exit Sub
End Sub

'++LotusScript Development Environment:2:2:Hook_Attachment_BeforeAttachAdd:0:8
' Avant ajout d'une pièce jointe
Sub Hook_Attachment_BeforeAttachAdd(docContext As NotesDocument, strAttachmentName As String)
	
	' Gestion d'erreurs
	On Error GoTo ErrorHandler
	
	
	
	' C'est fini, on sort
	Exit Sub
	
	
' Gestion d'erreurs
ErrorHandler:
	Hooks_HandleError("Hook_Attachments_BeforeAttachAdd")
	Exit Sub
End Sub