'++LotusScript Development Environment:2:5:(Options):0:72
Option Public
Option Declare

Use "Forms_Libs"
Use "LogEntry"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Function PRESTE_RM_Export_GetDocumentLine(docProcessed As NotesDocument) As String
Declare Function PRESTE_RM_Export_GetHeaders() As String
Declare Function FormatForCSV_Light(pString As String) As String

'++LotusScript Development Environment:2:5:(Declarations):0:10

'++LotusScript Development Environment:2:1:PRESTE_RM_Export_GetDocumentLine:1:8
Function PRESTE_RM_Export_GetDocumentLine(docProcessed As NotesDocument) As String
	
	' Gestion d'erreurs	
	On Error GoTo ErrorHandler
	
	Dim LogEntry As LogEntry
	Dim strLine As String
	
	strLine = FormatForCSV(CStr(docProcessed.PRESTE_RM_Number(0)))
	strLine = strLine + ";" + FormatForCSV(Implode(docProcessed.GetItemValue("PRESTE_RM_Risque"), "<br>"))
	strLine = strLine + ";" + FormatForCSV(Implode(docProcessed.GetItemValue("PRESTE_RM_Mesure"), "<br>"))
	
	' Renvoi de la ligne	
	PRESTE_RM_Export_GetDocumentLine =  strLine   	
	
	
	' C'est fini, on sort
	Exit Function
		
' Gestion d'erreurs
ErrorHandler:
	set LogEntry = New LogEntry
	If (Err = ERROR_PROPAGATE%) Then
		Error ERROR_PROPAGATE%, Error$
	Else
		LogEntry.LogType = LOGLEVEL_EMERG%
		LogEntry.SubName = "PRESTE_RM_Export_GetDocumentLine"
		LogEntry.Erl = Erl
		LogEntry.Err = Err
		LogEntry.Msg = Error$
		Error ERROR_PROPAGATE%, LogEntry.ToString
	End If
	Exit Function
End Function


'++LotusScript Development Environment:2:1:PRESTE_RM_Export_GetHeaders:1:8
Function PRESTE_RM_Export_GetHeaders() As String
	
	PRESTE_RM_Export_GetHeaders = "NÂ° risque;Risque;Mesure"
	
End Function



'++LotusScript Development Environment:2:1:FormatForCSV_Light:0:8
' Cette fonction formatte un texte pour export CSV
Function FormatForCSV_Light(pString As String) As String
	
	' Gestion d'erreurs	
	On Error GoTo ErrorHandler
	
	
	Dim FindArray() As String	
	ReDim FindArray(0) As String

	Dim ReplacementArray() As String
	ReDim ReplacementArray(0) As String
	
	FindArray(0) = """"
	ReplacementArray(0) = """"""
	
	FormatForCSV_Light = """" + FullTrim(Replace(pString, FindArray, ReplacementArray)) + """"
	
	
	Exit Function

' Gestion d'erreurs
ErrorHandler:
	If (Err = ERROR_PROPAGATE%) Then
		Error ERROR_PROPAGATE%, Error$
	Else
		Dim LogEntry As New LogEntry
		LogEntry.LogType = LOGLEVEL_EMERG%
		LogEntry.SubName = "FormatForCSV_Light"
		LogEntry.Erl = Erl
		LogEntry.Err = Err
		LogEntry.Msg = Error$
		Error ERROR_PROPAGATE%, LogEntry.ToString
	End If
	Exit Function
End Function